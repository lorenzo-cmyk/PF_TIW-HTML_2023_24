title ViewFolderContentServlet - GET

Client->ViewFolderContentServlet: GET /folder
ViewFolderContentServlet->Validators: parseInt(request.getParameter("folderID"))
ViewFolderContentServlet->HttpSession: getAttribute("user")
ViewFolderContentServlet->User: getUserID()
ViewFolderContentServlet->Validators: parseInt(request.getParameter("errorCode"))
ViewFolderContentServlet->ThymeleafObjectsBuilder: getWebContextFromServlet(this, request, response)
alt errorCode == 0
    ViewFolderContentServlet->WebContext: setVariable("messageContext", MessageTypesEnumeration.DEFAULT.getValue())
    ViewFolderContentServlet->WebContext: setVariable("message", "Here you can see the content of the requested folder.")
else
    ViewFolderContentServlet->Validators: retrieveErrorMessageFromErrorCode(errorCode)
    ViewFolderContentServlet->WebContext: setVariable("messageContext", MessageTypesEnumeration.ERROR.getValue())
    ViewFolderContentServlet->WebContext: setVariable("message", errorMessage)
end
ViewFolderContentServlet->FolderDAO: new FolderDAO(servletConnection)
ViewFolderContentServlet->FolderDAO: getFolderByID(folderID, ownerID)
alt folder == null
    ViewFolderContentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "The folder you are asking for does not exist or is not owned by the logged user. Are you trying to hijack the request?")
else
    ViewFolderContentServlet->FolderDAO: getSubfolders(folderID, ownerID)
    ViewFolderContentServlet->DocumentDAO: new DocumentDAO(servletConnection)
    ViewFolderContentServlet->DocumentDAO: getDocumentsByFolder(folderID, ownerID)
    ViewFolderContentServlet->WebContext: setVariable("folder", folder)
    ViewFolderContentServlet->WebContext: setVariable("subfolders", subfolders)
    ViewFolderContentServlet->WebContext: setVariable("documents", documents)
    ViewFolderContentServlet->TemplateEngine: process("ViewFolderContentTemplate", webContext, response.getWriter())
end
alt FailedInputParsingException
    ViewFolderContentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "Malformed request. Are you trying to hijack the request?")
else SQLException
    ViewFolderContentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Unable to retrieve the folder content due to a critical error in the database.")
else UnknownErrorCodeException
    ViewFolderContentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "Unknown error code provided. Are you trying to hijack the request?")
end