title ViewDocumentDetailsServlet - GET

Client->ViewDocumentDetailsServlet: GET /document
ViewDocumentDetailsServlet->Validators: parseInt(request.getParameter("documentID"))
ViewDocumentDetailsServlet->HttpSession: getAttribute("user")
HttpSession->User: getUserID()
ViewDocumentDetailsServlet->DocumentDAO: new DocumentDAO()
ViewDocumentDetailsServlet->DocumentDAO: getDocumentByID(documentID, ownerID)
alt document == null
    ViewDocumentDetailsServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "The document you are asking for does not exist or is not owned by the logged user. Are you trying to hijack the request?")
else
    ViewDocumentDetailsServlet->ThymeleafObjectsBuilder: getWebContextFromServlet(this, request, response)
    ViewDocumentDetailsServlet->WebContext: setVariable("document", document)
    ViewDocumentDetailsServlet->TemplateEngine: process("ViewDocumentDetailsTemplate", webContext, response.getWriter())
end
alt FailedInputParsingException
    ViewDocumentDetailsServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "Malformed request. Are you trying to hijack the request?")
else SQLException
    ViewDocumentDetailsServlet->HttpServletResponse: sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Unable to retrieve the document details due to a critical error in the database.")
end