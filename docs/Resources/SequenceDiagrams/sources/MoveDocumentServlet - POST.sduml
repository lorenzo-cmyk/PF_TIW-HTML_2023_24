title MoveDocumentServlet - POST

Client->MoveDocumentServlet: POST /move/move-document
MoveDocumentServlet->Validators: parseInt(request.getParameter("folderID"))
MoveDocumentServlet->Validators: parseInt(request.getParameter("documentID"))
MoveDocumentServlet->HttpSession: getAttribute("user")
MoveDocumentServlet->User: getUserID()
MoveDocumentServlet->FolderDAO: new FolderDAO(servletConnection)
MoveDocumentServlet->DocumentDAO: new DocumentDAO(servletConnection)
MoveDocumentServlet->FolderDAO: getFolderByID(folderID, ownerID)
MoveDocumentServlet->DocumentDAO: getDocumentByID(documentID, ownerID)
alt folder or document is null
    MoveDocumentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "Folder or document not found and/or not owned by the user. Are you trying to hijack the request?")
else
    MoveDocumentServlet->DocumentDAO: moveDocument(documentID, ownerID, folderID)
    alt DocumentMovingException or DuplicateDocumentException
        MoveDocumentServlet->HttpServletResponse: sendRedirect(getServletContext().getContextPath() + "/folder?folderID=" + document.getFolderID() + "&errorCode=" + e.getErrorCode())
    else
        MoveDocumentServlet->HttpServletResponse: sendRedirect(getServletContext().getContextPath() + "/folder?folderID=" + folderID)
    end
end
alt FailedInputParsingException
    MoveDocumentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_BAD_REQUEST, "Malformed request. Are you trying to hijack the request?")
else SQLException
    MoveDocumentServlet->HttpServletResponse: sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Unable to move the document due to a critical error in the database.")
end